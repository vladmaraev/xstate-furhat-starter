import { AnyEventObject, ActorSystem, ActorSystemInfo, AnyActorRef, Snapshot } from "./types.js";
export declare function createSystem<T extends ActorSystemInfo>(rootActor: AnyActorRef): ActorSystem<T>;
export interface BaseInspectionEventProperties {
    rootId: string;
}
export interface InspectedSnapshotEvent extends BaseInspectionEventProperties {
    type: '@xstate.snapshot';
    actorRef: AnyActorRef;
    event: AnyEventObject;
    snapshot: Snapshot<unknown>;
}
export interface InspectedEventEvent extends BaseInspectionEventProperties {
    type: '@xstate.event';
    sourceRef: AnyActorRef | undefined;
    targetRef: AnyActorRef;
    event: AnyEventObject;
}
export interface InspectedActorEvent extends BaseInspectionEventProperties {
    type: '@xstate.actor';
    actorRef: AnyActorRef;
}
export type InspectionEvent = InspectedSnapshotEvent | InspectedEventEvent | InspectedActorEvent;
